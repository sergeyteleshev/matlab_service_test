function [factor_p, factor_Tq, factor_Ts, factor_Nq, factor_Ns, factor_Ca, factor_Cr, T, U_condition, Q_amount] = modelSystem(A, S, Pr, device_number, queue_max)        
    U=zeros(1, device_number);           %Массив устройств -  время
    U_priority=zeros(1, device_number);  %Массив устройств - приоритеты
    T=[0];                               %Массив модального времени
    Int=[];                              %Массив интервалов времени
    Q=zeros(1, queue_max);                                %Массив очереди - время выполнения заявок S(i)
    Q_current=zeros(1, queue_max);                        %Массив очереди - порядковые номера заявок i 
    Q_priority=zeros(1, queue_max);                       %Массив очереди - приоритеты заявок

    
    p=zeros(1, device_number); %Время, которое каждое устройство находилось в состоянии обработки заявки
    d=[];                      %Время пребывания каждой заявки в очереди
    
    
    n=length(A);               %Общее число поступивших в систему требований   
    Ns=0;                      %Число прошедших заявок
    
    Q_amount=[0];              %Массив чисел требований в очереди - необходим для графика
    S_amount=[0];              %Массив чисел требований в системе - необходим для графика
    dn=[];                     %Массив среднего время ожидания заявки в очереди - необходим для графика
    sn=[];                     %Массив среднего время пребывания заявки в системе - необходим для графика
    p_current=[0];             %Массив текущих коэффициентов системы - необходим для графика
    
    
    U_condition(1,:)=[U];      %Массив состояний устройств - необходим для визуализации
     
    i=1;                       %Переменная порядкового номера текущей заявки
    
    while i <= n
        %Определение следующего события: поступление новой заявки(А(i)) или
        %выполнение текущей (S_MIN)
        
        % Нахождение максимального элемента среди двух сгенерированных массивов
        S_MIN = max([A,S])+1;

        % Если какое-то из устройств занято...
        if ~isempty(U(U>0))
           S_MIN = min(U(U>0));
        end
        
        if S_MIN < A(i)  %Следующее событие - выполнение имеющейся заявки                        
            %Изменение текущего времени
            Int(end+1)=S_MIN;
            T(end+1)=T(end)+S_MIN;                        
            
            %Измение времени появления следующей заявки
            A(i)=A(i)-S_MIN;
            
            for k = 1:1:length(U)
                 if U(k)>0 && (length(Int)>1)
                     U(k)=U(k)-S_MIN;
                     if(U(k))
                     %Сбор статистики p
                     %p(k)=p(k)+S_MIN;
                 end
            end
            
        else %Следующее событие - поступление новой заявки                        
            
        end

        %Сравнение S_MIN и времени поступления новой заявки
    end
end